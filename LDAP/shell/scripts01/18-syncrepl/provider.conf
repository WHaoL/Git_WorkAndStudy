include     /etc/openldap/schema/core.schema
include     /etc/openldap/schema/cosine.schema
include     /etc/openldap/schema/inetorgperson.schema
include     /etc/openldap/schema/openldap.schema
include     /etc/openldap/schema/nis.schema
include     /etc/openldap/schema/collective.schema
include     /etc/openldap/schema/corba.schema
include     /etc/openldap/schema/duaconf.schema
include     /etc/openldap/schema/dyngroup.schema
include     /etc/openldap/schema/java.schema
include     /etc/openldap/schema/misc.schema
include     /etc/openldap/schema/pmi.schema
include     /etc/openldap/schema/ppolicy.schema

pidfile     /var/run/openldap/slapd.pid
argsfile     /var/run/openldap/slapd.args


# TLSCACertificateFile /etc/openldap/certs/cacert.pem
# TLSCertificateFile /etc/openldap/certs/slapdcert.pem
# TLSCertificateKeyFile /etc/openldap/certs/slapdkey.pem
# TLSCipherSuite HIGH: MEDIUM
# TLSVerifyClient try

modulepath /usr/lib64/openldap
moduleload syncprov.la

database hdb
# database mdb
# maxsize 10485760
suffix dc=testldap,dc=com
rootdn cn=admin,dc=testldap,dc=com
rootpw admin
directory /var/lib/ldap
# directory /var/lib/mdb

# index objectclass eq
index objectclass,entryCSN,entryUUID eq
overlay syncprov
syncprov-checkpoint 100 10
syncprov-sessionlog 100
# readonly off

# access to attrs=userPassword
#  by self =xw
#  by anonymous auth
#  by * none

# access to *
#     by anonymous auth
#     by self write
#     by users read
#     # by dn.sub="cn=admin,dc=testldap,dc=com" read
# access to *
#  by dn.exact=gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=auth manage
#  by * break

# updatedn cn=admin,dc=testldap,dc=com

database monitor
access to *
        by dn.exact="gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=auth" read
        by dn.base="cn=admin,dc=testldap,dc=com" read
        by * none



#-------------------------------------------------步骤
# systemctl stop slapd
# cp /home/lwh/scripts01/syncrepl/syncrepl-provider.conf /etc/openldap/slapd.conf
# cp /usr/share/openldap-servers/DB_CONFIG.example /var/lib/ldap/DB_CONFIG
# mkdir -p /var/lib/mdb
# slaptest -f /etc/openldap/slapd.conf
# slaptest -u -f /etc/openldap/slapd.conf
# tree /etc/openldap/slapd.d
# rm -rf /etc/openldap/slapd.d/*
# slaptest -f /etc/openldap/slapd.conf -F /etc/openldap/slapd.d/ 
# slaptest -u -f /etc/openldap/slapd.conf -F /etc/openldap/slapd.d/ 
# chown -R ldap:ldap /etc/openldap/slapd.d
#     # chmod -R 700 /etc/openldap/slapd.d
# tree /etc/openldap/slapd.d
# systemctl start slapd


# 启动失败，查看日志
#  slapd -h ldap://127.0.0.1 -d 481
#-------------------------------------------------











#-------------------------------------------------下面的是关于syncrepl的知识点--------------------------------------------------------
#Master/Provider

#cookie用于 唯一标识某一consumer的同步状态(同步到了哪个位置)
#总结:关于syncrepl中的cookie 
#refreshOnly
#    每次同步完成后 将cookie发送给consumer 
#    (consumer在向provider请求下一次增量同步时将携带此cookie。)
#refreshAndPersist   
#    刷新阶段结束时, 
#        cookie和 最终携带了refreshDone=TRUE的同步消息 一起发送
#    持久阶段,
#        cookie和 持久阶段每次生成的SearchResultEntry消息 一起发送
#    在持久阶段,还可以: 
#        任何时间,只要provider想更新consumer的同步状态指示符的,
#        provider都可以发送携带了cookie的Sync Info message

#总结: 关于syncrepl中的sessionlog
#在provider中配置 (sessionlog 会话日志)
#    sessionlog 记录了从provider数据库中删除的条目的entryUUID (注意: 是有限数量的条目)
#    如果:
#        consumer足够新 sessionlog足够新,并且自从client上次同步后没有发生sessionlog的截断,那么syncrepl引擎将使用 -->> 删除阶段
#        如果没有设置seeeionlog, 或者 consumer太过时(以至于无法被sessionlog所覆盖/涵盖) ,那么syncrepl引擎将使用 -->> 当前阶段
#   总结：
#       sessionlog中记录了被删除条目的entryUUID，所以在 "删除阶段" 传播这些entryUUID
#       因为sessionlog使用需要搜索 entryUUID 属性。
#       因此在entryUUID属性上设置 eq 索引将极大地改善provider序上的sessionlog的性能。
#   注意：所有有写操作（“添加”除外）都记录在sessionlog中。(18.3.1.2) 我认为这句有歧义!!!说的不严谨

#关于provider端的syncprov配置为overlay的问题:
#    consumer端的syncrepl引擎可以和任何后端/backend一切使用
#        所以不需要指定
#        只需要在consumer端指定 syncrepl的规则即可
#    LDAP Sync provider可以配置为任何后端/backend上的overlay,但是最适合与back-bdb, back-hdb, or back-mdb backends一起使用
#        所以需要指定 overlay syncprov


#cookie
#    csn=<csn> rid=<rid>
#        <csn>是contextCSN,用于标识slave/consumer的同步/复制状态
#        <rid>是slave/consumer的id+ 
#Master会根据需要生成contextCSN,分几种情况: 
#   Slave第一次连接Master 进行同步时产生
#   LDIF文件被加载时不包含contexCSN, 那么slapadd -w 以使它产生;会使得Slave第一次进行同步的反应更快
#contextCSN
#    在entryCSN属性上 设置eq索引, 并且
#    配置 contextCSN检查点
#    将大大加快对于contextCSN的扫描

# syncrepl规范，存在于consumer的slapd.conf文件中；

# 建议 
#   加载 provider备份转储的LDIF文件 来初始化consumer的内容
#   然后 syncrepl引擎，自动将consumer内容和provider内容同步

# mdb后端 还需要设置最大大小(以字节为单位)
# 1024字节 = 1KB        2^10
# 1048576 = 1MB         2^20
# 10485760  10MB default
# 104857600 100MB
# 1073741824 1GB        2^30
# 85899345920 80GB
