---------------------------------------------------------------------------------------------------------    
本文档说明：
    主要记录了OpenLDAP的发展历程
    以及 
    OpenLDAP开发者大会上的 几篇比较好的 演讲稿


---------------------------------------------------------------------------------------------------------    

OpenLDAP各个版本的发展路线图/发展历史：https://www.openldap.org/software/roadmap.html

Past Releases
过去的版本
    OpenLDAP 1.0(1998年8月发布)
        这个版本没有被积极维护。
    OpenLDAP 1.1(1998年12月发布)
        这个版本没有被积极维护。
            附加功能
                外部可配置的客户端库支持:ldap.conf(5)
                GTK接口
                PHP3接口
            增强安全特性
                支持按组ACL。
                改进的密码安全特性，包括SHA1, MD5和crypt(3)支持，而不是明文密码。
                增强的TCP wrapper支持
            改进了构建环境
                自动配置
                共享库的支持
            升级平台支持
    OpenLDAP 1.2(1999年2月发布)
        这个版本没有被积极维护。
            ldapTCL -一个来自NeoSoft的TCL SDK
            DAP密码的工具
            支持Salted passwd
            大量的错误修复和平台更新
    OpenLDAP 2.0(2000年8月发布)
        这个版本没有被积极维护。
        LDAPv3 support and much, much more!
            LDAPv3 (RFC3377, 2251-2256, 2829-2830)
                强身份认证(SASL) (RFC2829)
                开始(支持)TLS (RFC2830)
                Language Tags(RFC2596)
                DNS-based服务位置(RFC2247+RFC3088)
                密码修改(RFC3062)
            增强独立服务器
                命名的 References/ManageDsaIT (RFC3296)
                增强了 访问控制子系统
                线程池
                支持 基于优先级的线程
                支持 多个listener
            LDIFv1 (RFC2849)
            改进的 platform/subsystem 检测
    OpenLDAP 2.1(2002年6月发布)
        这个版本没有被积极维护。
        增强了功能和提高了稳定性:
            面向事务的数据库后端
            改进了 Unicode/DN处理
            SASL验证/授权映射
            SASL在目录中存储 身份验证秘密
            增强了 管理的 limits/access控制
            增强了 系统system schema检查
            LDAPv3扩展:
                增强了 Language Tag/Range 选项支持
                objectClass-based属性列表
                LDAP Who ami I? 扩展操作
                LDAP no-op 控制
                控制 Matched Values(值匹配)(RFC3876)
                Misc LDAP特性扩展
            LDAP c++ API
            更新了LDAP C和TCL APIs
            Meta/元 后端
            Monitor/监控器 后端
            虚拟上下文“粘合”后端 Virtual Context "glue" Backend
    OpenLDAP 2.2(2003年12月发布)
        这个版本没有被积极维护。
        增强了功能和改进了可伸缩性:
            基于"LDAP Sync"的轻量级复制
            支持 代理缓存
            分层次的后端                    (Hierarchical Backend)
            支持NS-SLAPI
            后端分层                        (Backend Layering)
            扩展了 访问控制(access control)，包括支持动态组(dynamic group)
            LDAPv3扩展:
                扩展了 ACID
                取消操作(RFC3909)           (Cancel Operation)
                内容同步操作                (Content Synchronization Operation)
                DIT内容规则(X.501)          (DIT Content Rules)
                扩展了 重复条目
                扩展了 简单分页结果(RFC2696)
                扩展了 代理授权             (Proxied Authorization)
    OpenLDAP 2.3(2005年6月发布)
        这个版本没有被积极维护。
        增强了功能和改进了可伸缩性:
            扩展了 访问控制，包括"don't disclose on error"条款
            配置后端(cn=config)
            密码策略叠加(Password Policy Overlay)(正在进行中)
            Sync Provider Overlay
            支持了Delta-syncrepl
            LDAPv3扩展:
                扩展了ManageDIT(work in progress在制作中)
                组件匹配(experimental试验阶段)

Current Release(s)
当前版本(s)
    OpenLDAP 2.4(2007年10月发布)
        增强了功能和改进了可伸缩性:
            修正了slapd调度员
            MirrorMode和MultiMaster复制
            Proxy Sync replication
            扩大了 监控 monitor
            多个new Overlays
            扩展了文档
            新的套接字后端(试验)            (New socket backend)
            LDAPv3扩展:
                支持了 LDAP链接操作         (LDAP Chaining Operation)
                LDAP不使用复制控制支持       (LDAP Don't Use Copy Control support)
                LDAP动态目录服务(RFC2589)   (LDAP Dynamic Directory Services)
未来的小版本
    OpenLDAP 2.5 (TBD)
        功能改进:
            动态语法引擎(基于第四)
            更广泛的动态配置
            LDAPv3扩展:
                LDAP事务支持

---------------------------------------------------------------------------------------------------------    
1st OpenLDAP Developers' Day, San Francisco, 2003-03-21 OpenLDAP第1次开发者大会-2003年3月21日


https://www.openldap.org/conf/odd-sfo-2003/choi.html (推荐！！！)
《Lightweight Replication in OpenLDAP》
    OpenLDAP Replication
        slurpd
            生产者发起的，基于日志的复制
            带外复制管理
        A New Lightweight Replication
            消费者发起的，基于状态的，拉式复制  ！！！ 
            最终一致性
            通过搜索操作进行复制-无需事先达成协议  ！！！
            最小历史记录信息  ！！！
            生产者方面的消费者信息最少 ！！！ 
            主从  ！！！ 
            支持部分复制（部分复制和稀疏复制）
            主复制和辅助复制
            基于客户端同步协议
                draft-zeilenga-ldup-sync-01
                draft-ietf-ldup-lcup-04
    Sync Protocol - LCUP
        LDAP Sync
            维护轻量级历史信息
            适用于有限数量的refreshOnly consumer
            复制时必须包含
                syncSearchSpec : {base, scope, filter, attrs, binddn}
                presentRange : {startCSN,endCSN}


https://kb.symas.com/how-to-guides/ 
  《Configure Delta-Syncrepl》 
   https://3bmahv3xwn6030jbn72hlx3j-wpengine.netdna-ssl.com/wp-content/uploads/2019/10/Configure-Delta-Syncrepl.pdf 




15:00-17:00
《LDAP Standardization Report》- Kurt D. Zeilenga  -  
    LCUP (content sync) work:两个提案
        •“LCUP” 
            需要历史记录，
            需要有限的“system schema”知识
        •“LDAP Sync” 
            不需要历史记录，
            需要“system schema”知识
   LDUP(multi-master replication)工作停顿了，
    工作组/WG 正在考虑如何进行。

---------------------------------------------------------------------------------------------------------    
OpenLDAP Developers' Day - Vienna - 2003-07-18    OpenLDAP第二次开发者大会-2003年

https://www.openldap.org/conf/odd-wien-2003/jong.pdf 
《SyncRepl Engine》by jong - (推荐!!!!!!!!!)

https://www.openldap.org/conf/odd-wien-2003/ando.pdf
《Meta Directory》by ando - (推荐!!!)


---------------------------------------------------------------------------------------------------------    
OpenLDAP Developers' Day - San Diego - 2004    OpenLDAP第三次开发者大会-2004年

发表这些演讲时 是2004年8月，当时处于OpenLDAP 2.2(2003年12月发布)
但是依然能学到很多概念的设计初衷（！！！！！！！！）


03__《CN=config and Overlays》https://www.openldap.org/conf/odd-sandiego-2004/Howard.pdf
主要讨论了CN=config和Overlays
Overlays
    Status Summary
        增强回调机制
            OpenLDAP 2.1中引入的
            OpenLDAP 2.2中部署成功
    Overlay Status
        最初的目标
            减少冗余
            简化调用顺序
            加强回调
            开启 后端的 堆叠/分层 功能
        大获成功
            整合了backend_group/backend_attribute，backend API继续增长
            Operation和SlapReply块产生了可观的性能提升（〜10％）
            ProxyCache，Chain，Rewrite和其他各种overlays已证明Oerlay concept的可行性
        Overlay机制还有一段路要走
            并非所有后端入口点都得到处理
            没有一个工具入口点得到处理
            我们希望分层是完全透明的，但是后端设计中存在一些必须解决的明显问题（例如back-ldbm死锁）
            我们想在overlays方面重新实现SLAPI – 既然我们有了一个全局前端，那么这更可行
CN=config 
    CN=config Status        
        最初目标
            将config.c转换为表驱动机制（table-driven mechanism）
                •保持与现有slapd.conf语法的向后兼容性
                •允许创建只读的CN=config树以查看当前配置
                •复制来自CN=monitor的某些信息
            实现简单的LDIF backend  （back-ldif）(cn=config使用back-ldif来存储条目)
            使用overlay机制（惊奇！）来实现修改语义
            支持有限的初始修改
                •编辑ACL           （即在cn=config中配置access）
                •添加schema        （允许自定义schema 只有加载了schema才能在cn=config上配置某些objectclass）
            修改将是原子性的，并立即生效(所谓原子操作是指不会被线程调度机制打断的操作；这种操作一旦开始，就一直运行到结束，中间不会有任何 context switch)
        慢慢进行中
            back-ldif完成
                •使用文件系统维护树形结构，每个文件存储一个条目
                •不支持索引
            liblunicode合并
                •ucdata进行了硬编码，因此我们可以使用LDIF进行引导
            全局变量合并
                •新的“前端(frontend)”机制
                •将其余的全局配置项存储在frontend-> be_private中
    CN=config Bootstrapping
        CN=config overlay stack 将被硬编码
        从slapd.conf迁移：
            如果存在back-ldif目录，则将忽略slapd.conf
            否则，请读取slapd.conf并写入到back-ldif
            或者，只需写入到一个平面LDIF文件
        加载平面LDIF配置文件
            只需将slapadd与后端一起使用  ＃0
            将使用新的命令行选项（例如–F）指定back-ldif数据目录的位置
    CN=config Wishes
        包含什么？
            考虑到back-ldif实现，可能没有必要
        moduleload？
            由于存在明确定义的shutdown API，因此可以在运行时动态地加载和卸载backends和overlays。
            其他modules – syntax语法，password密码等 将需要重新制作
        重新配置Attribute的index ？
            可以通过将属性视为未索引的属性，直到完成索引传递为止
        交换Backend database？
            即时将backend指向其他文件系统位置，以允许更换磁盘等。
            可能需要多个LDAPModify请求； 可能是LDAP事务的候选人
        还有更多我们尚未想到的
Conclusions
    • slapd Overlays are really cool  #slapd Overlays真的很酷
    • back-config will be an Overlay  #back-config将会是一个Oerlay
    • We expected back-config to be a big effort #我们希望back-config是一项很大的进步
    • We’re making progress…          #我们正在进步……

---------------------------------------------------------------------------------------------------------    
---------------------------------------------------------------------------------------------------------    
---------------------------------------------------------------------------------------------------------    
---------------------------------------------------------------------------------------------------------    
---------------------------------------------------------------------------------------------------------    
---------------------------------------------------------------------------------------------------------    
---------------------------------------------------------------------------------------------------------    
---------------------------------------------------------------------------------------------------------    
---------------------------------------------------------------------------------------------------------    

